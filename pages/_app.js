import "../styles/globals.css";
import Head from "next/head";

import { useState } from "react";

import NextLink from "next/link";
import styles from "../styles/Home.module.css";
import Container from "@mui/material/Container";
import AppBar from "@mui/material/AppBar";
import Toolbar from "@mui/material/Toolbar";
import Typography from "@mui/material/Typography";

import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import Drawer from "@mui/material/Drawer";
import List from "@mui/material/List";
import Divider from "@mui/material/Divider";
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import ListItemText from "@mui/material/ListItemText";

import HomeIcon from "@mui/icons-material/Home";

import LightModeIcon from "@mui/icons-material/LightMode";
import NightlightIcon from "@mui/icons-material/Nightlight";
import LocalShippingIcon from "@mui/icons-material/LocalShipping";
import LocalMallIcon from "@mui/icons-material/LocalMall";
import AccountCircleIcon from "@mui/icons-material/AccountCircle";

import ComputerIcon from "@mui/icons-material/Computer";
import TabletMacIcon from "@mui/icons-material/TabletMac";
import CameraAltIcon from "@mui/icons-material/CameraAlt";
import HeadphonesIcon from "@mui/icons-material/Headphones";
import PhoneAndroidIcon from "@mui/icons-material/PhoneAndroid";
import MoneyOffIcon from "@mui/icons-material/MoneyOff";
import TvIcon from "@mui/icons-material/Tv";
import { Box } from "@mui/system";
import { Global, css } from "@emotion/react";
import Router from "next/router";
import {
  createTheme,
  LinearProgress,
  ThemeProvider,
  useMediaQuery,
} from "@mui/material";

// components

import CompleteLink from "../components/CompleteLink";

function MyApp({ Component, pageProps }) {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isRouting, setIsRouting] = useState(false);
  const is900px = useMediaQuery("(min-width: 900px)");
  const isDarkQuery = useMediaQuery("(prefers-color-scheme: 'dark')");
  const [isDark, setIsDark] = useState(isDarkQuery);

  const data = [
    {
      pageLink: "/",
      Icon: <HomeIcon />,
      label: "Home",
    },
    {
      pageLink: "/Mobile",
      Icon: <PhoneAndroidIcon />,
      label: "Mobile",
    },
    {
      pageLink: "/Pc",
      Icon: <ComputerIcon />,
      label: "Computers",
    },
    {
      pageLink: "/Tablet",
      Icon: <TabletMacIcon />,
      label: "Tablets",
    },
    {
      pageLink: "/Contact",
      Icon: <CameraAltIcon />,
      label: "Drone & Camera",
    },
    {
      pageLink: "/Contact",
      Icon: <HeadphonesIcon />,
      label: "Audio",
    },

    {
      pageLink: "/Contact",
      Icon: <TvIcon />,
      label: "TV",
    },
    {
      pageLink: "/Contact",
      Icon: <MoneyOffIcon />,
      label: "Sale",
    },
  ];

  const drawerLinks = data.map((e, id) => (
    <div key={id}>
      <ListItem disablePadding>
        <NextLink href={e.pageLink}>
          <ListItemButton>
            <ListItemIcon>{e.Icon}</ListItemIcon>
            <ListItemText primary={e.label} />
          </ListItemButton>
        </NextLink>
      </ListItem>
      <Divider />
    </div>
  ));

  Router.events.on("routeChangeStart", () => setIsRouting(true));
  Router.events.on("routeChangeComplete", () => setIsRouting(false));
  Router.events.on("routeChangeError", () => setIsRouting(false));
  const theme = createTheme({
    palette: {
      mode: isDark ? "dark" : "light",
    },
  });
  return (
    <ThemeProvider theme={theme}>
      <Global
        styles={css`
          body {
            background-color: ${isDark ? "#2A272A" : "white"};
            color: ${isDark ? "white" : "black"};
          }
        `}
      />
      <div className={styles.App}>
        <Head>
          <title>Tech Shop</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favi icon.ico" />
        </Head>
        {isRouting ? (
          <LinearProgress
            aria-label="proggress bar"
            color="error"
            sx={{ zIndex: 1200, borderRadius: "15px" }}
          />
        ) : (
          ""
        )}
        <Box
          sx={{
            background: "black",

            color: "white",
            padding: "5px 10px",
            display: "flex",
            alignItems: "center",
            gap: "10px",
          }}
        >
          <LocalShippingIcon />
          <Typography variant="body2">
            Free shipping for orders more than 50$
          </Typography>
        </Box>
        <AppBar position="relative">
          <Toolbar>
            {is900px ? (
              <CompleteLink data={data} isDark={isDark} />
            ) : (
              <IconButton
                size="large"
                edge="start"
                color="inherit"
                aria-label="menu"
                onClick={() => setIsMenuOpen(true)}
              >
                <MenuIcon />
              </IconButton>
            )}

            <IconButton
              size="large"
              color="inherit"
              onClick={() => setIsDark((e) => !e)}
              aria-label="dark-mode"
              sx={{ ml: "auto" }}
            >
              {isDark ? (
                <LightModeIcon />
              ) : (
                <NightlightIcon sx={{ color: "white" }} />
              )}
            </IconButton>
            <IconButton size="large" color="inherit" aria-label="cart">
              <LocalMallIcon />
            </IconButton>
            <IconButton size="large" color="inherit" aria-label="Login">
              <AccountCircleIcon />
            </IconButton>
          </Toolbar>
        </AppBar>

        {!is900px && (
          <Drawer
            anchor={"left"}
            open={isMenuOpen}
            onClose={() => setIsMenuOpen(false)}
          >
            <List onClick={() => setIsMenuOpen(false)}>{drawerLinks}</List>
          </Drawer>
        )}
        <Container maxWidth="xl">
          <Box>
            <Component {...pageProps} />
          </Box>
        </Container>
        <footer>
          <Box
            sx={{
              display: "flex",

              width: "100%",

              background:
                theme.palette.mode === "dark"
                  ? "hsl(0,0%,15%)"
                  : "hsl(210,79%,46%)",
              color: "white",
              flexDirection: "column",
              alignItems: "center",
            }}
          >
            <CompleteLink data={data} isDark={isDark} />

            <Typography>2022 &copy; all right reserved.</Typography>
          </Box>
        </footer>
      </div>
    </ThemeProvider>
  );
}
export default MyApp;
