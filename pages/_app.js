import "../styles/globals.css";
import Head from "next/head";

import { useEffect, useRef, useState } from "react";
import Image from "next/image";
import NextLink from "next/link";
import styles from "../styles/Home.module.css";
import Container from "@mui/material/Container";
import AppBar from "@mui/material/AppBar";
import Toolbar from "@mui/material/Toolbar";
import Typography from "@mui/material/Typography";
import Button from "@mui/material/Button";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import Drawer from "@mui/material/Drawer";
import List from "@mui/material/List";
import Divider from "@mui/material/Divider";
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import ListItemText from "@mui/material/ListItemText";
import InboxIcon from "@mui/icons-material/MoveToInbox";
import MailIcon from "@mui/icons-material/Mail";
import HomeIcon from "@mui/icons-material/Home";
import InfoIcon from "@mui/icons-material/Info";
import ShoppingBagIcon from "@mui/icons-material/ShoppingBag";
import HistoryEduIcon from "@mui/icons-material/HistoryEdu";
import ContactPhoneIcon from "@mui/icons-material/ContactPhone";
import LightModeIcon from "@mui/icons-material/LightMode";
import NightlightIcon from "@mui/icons-material/Nightlight";
import LocalShippingIcon from "@mui/icons-material/LocalShipping";
import LocalMallIcon from "@mui/icons-material/LocalMall";
import AccountCircleIcon from "@mui/icons-material/AccountCircle";
import MusicOffIcon from "@mui/icons-material/MusicOff";
import AudiotrackIcon from "@mui/icons-material/Audiotrack";
import SearchIcon from "@mui/icons-material/Search";
import TextField from "@mui/material/TextField";
import { Box } from "@mui/system";
import Router from "next/router";
import {
  createTheme,
  Grid,
  LinearProgress,
  Slider,
  ThemeProvider,
  useMediaQuery,
} from "@mui/material";

// components

import CompleteLink from "../components/CompleteLink";

function MyApp({ Component, pageProps }) {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isRouting, setIsRouting] = useState(false);
  const is900px = useMediaQuery("(min-width: 900px)");
  const isDarkQuery = useMediaQuery("(prefers-color-scheme: 'dark')");
  const [isDark, setIsDark] = useState(isDarkQuery);
  const [isMusicPlaying, setIsMusicPlaying] = useState(false);

  const data = [
    {
      pageLink: "/",
      Icon: <HomeIcon />,
      label: "Home",
    },
    {
      pageLink: "/Blog",
      Icon: <HistoryEduIcon />,
      label: "Blog",
    },
    {
      pageLink: "/About",
      Icon: <InfoIcon />,
      label: "About",
    },
    {
      pageLink: "/Contact",
      Icon: <ContactPhoneIcon />,
      label: "Contact",
    },
    {
      pageLink: "/Contact",
      Icon: <ContactPhoneIcon />,
      label: "Contact2",
    },
  ];

  const drawerLinks = data.map((e, id) => (
    <div key={id}>
      <ListItem disablePadding>
        <NextLink href={e.pageLink}>
          <ListItemButton>
            <ListItemIcon>{e.Icon}</ListItemIcon>
            <ListItemText primary={e.label} />
          </ListItemButton>
        </NextLink>
      </ListItem>
      <Divider />
    </div>
  ));

  Router.events.on("routeChangeStart", () => setIsRouting(true));
  Router.events.on("routeChangeComplete", () => setIsRouting(false));
  Router.events.on("routeChangeError", () => setIsRouting(false));
  const theme = createTheme({
    palette: {
      mode: isDark ? "dark" : "light",
    },
  });
  return (
    <ThemeProvider theme={theme}>
      <div className={styles.App}>
        <Head>
          <title>Tech Shop</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favi icon.ico" />
        </Head>
        {isRouting ? (
          <LinearProgress
            aria-label="proggress bar"
            color="error"
            sx={{ zIndex: 1200, borderRadius: "15px" }}
          />
        ) : (
          ""
        )}
        <Box
          sx={{
            background: "black",

            color: "white",
            padding: "5px 10px",
            display: "flex",
            alignItems: "center",
            gap: "10px",
          }}
        >
          <LocalShippingIcon />
          <Typography variant="body2">
            Free shipping for orders more than 50$
          </Typography>
        </Box>
        <AppBar position="relative">
          <Toolbar>
            {is900px ? (
              <CompleteLink data={data} isDark={isDark} />
            ) : (
              <IconButton
                size="large"
                edge="start"
                color="inherit"
                aria-label="menu"
                onClick={() => setIsMenuOpen(true)}
              >
                <MenuIcon />
              </IconButton>
            )}

            <IconButton
              size="large"
              color="inherit"
              onClick={() => setIsMusicPlaying((e) => !e)}
              aria-label="music player"
              sx={{ ml: "auto" }}
            >
              {isMusicPlaying ? <AudiotrackIcon /> : <MusicOffIcon />}
            </IconButton>
            <IconButton
              size="large"
              color="inherit"
              onClick={() => setIsDark((e) => !e)}
              aria-label="dark-mode"
            >
              {isDark ? (
                <LightModeIcon />
              ) : (
                <NightlightIcon sx={{ color: "white" }} />
              )}
            </IconButton>
            <IconButton size="large" color="inherit" aria-label="cart">
              <LocalMallIcon />
            </IconButton>
            <IconButton size="large" color="inherit" aria-label="Login">
              <AccountCircleIcon />
            </IconButton>
          </Toolbar>
        </AppBar>

        {!is900px && (
          <Drawer
            anchor={"left"}
            open={isMenuOpen}
            onClose={() => setIsMenuOpen(false)}
          >
            <List onClick={() => setIsMenuOpen(false)}>{drawerLinks}</List>
          </Drawer>
        )}
        <Container maxWidth="xl">
          <Box
            sx={{
              display: "flex",
              justifyContent: "space-around",
              alignItems: "stretch",
              padding: "10px 15px",
            }}
          >
            <input
              placeholder="search..."
              style={{
                borderTopLeftRadius: "5px",
                borderBottomLeftRadius: "5px",
                border: "1px solid hsl(0,0%,70%)",
              }}
            />
            <Button startIcon={<SearchIcon />} variant="contained">
              Search
            </Button>
          </Box>

          <Box>
            <Component {...pageProps} />
          </Box>
        </Container>
        <footer>
          <Box
            sx={{
              display: "flex",

              width: "100%",

              background:
                theme.palette.mode === "dark"
                  ? "hsl(0,0%,15%)"
                  : "hsl(210,79%,46%)",
              color: "white",
              flexDirection: "column",
              alignItems: "center",
            }}
          >
            <CompleteLink data={data} isDark={isDark} />

            <Typography>2022 &copy; all right reserved.</Typography>
          </Box>
        </footer>
      </div>
    </ThemeProvider>
  );
}
export default MyApp;
